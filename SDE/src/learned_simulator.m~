function [path_end] =learned_simulator(zero,m,dt,T,new_S,neighbors,d,delta,plot_sim,plot_points)
%TODO:comments

%%%optional parameters, for plotting
	if ~exist('plot_sim','var'), plot_sim = false; end
	if ~exist('plot_points','var'), plot_points = false; end
	%%%
	
	N = floor(T/dt);

	%path_end will store m column vectors, same dimension as Xzero,
	%collection of endpoints of all simulated paths
	path_end = zeros(size(Xzero,1),m); 	
	
	X = zeros(1,N+1); 
	X(1) = Xzero;

	%%%Calculate m trajectories of SDE
	for i = 1:m
       
		%%%Compute SDE until time dt*N
		for j = 1:N
            %find closest chart
            for n = 1:size(net,2)
                distances(n) = norm(Y(t) - net(n));
            end
            i = find(distances == min(distances));
            
            X(j+1) = learned_simulator_step(X(j),i,new_S,neighbors,d,dt,delta)            
		end
		
		%%%store terminal point in path_end
		path_end(:,i) = X(N+1); 
		
	if plot_sim	
			plot_X( [0:dt:T],X);
		end
	end

	if plot_points
		plot_path_end(path_end);
	end
end
